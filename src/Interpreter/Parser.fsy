%{

let getOp (op:string) = 
  match op with 
  | "+" -> ( + )
  | "-" -> ( - )
  | "*" -> ( * )
  | "/" -> ( / )
  | _ -> failwith (sprintf "Couldn't recognize operator: '%s'" op)

%}

%token <int> INT
%token <string> OP

%token LPAREN 
%token RPAREN

%token EOF

%start main
%type <int> main
%%

main:
	expr EOF				{ $1 }

expr: INT					{ $1 }
	| OP expr expr			{ (getOp $1) $2  $3 }
	| LPAREN expr RPAREN	{ $2 }