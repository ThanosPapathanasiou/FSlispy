{
open System
open System.Text
open FSharp.Text.Lexing

open FSlispy.Parser

let lexeme lexbuf =
    LexBuffer<_>.LexemeString lexbuf

let newline (lexbuf: LexBuffer<_>) =
    lexbuf.StartPos <- lexbuf.StartPos.NextLine

}

let digit = ['0'-'9']
let operator = ['+' '-' '*' '/']
let whitespace = [' ' '\t']
let newline = ('\n' | '\r' '\n')

rule tokenize = parse
| whitespace        { tokenize lexbuf }
| '('               { LPAREN }
| ')'               { RPAREN }
| ['-']?digit+      { INT ( Int32.Parse (lexeme lexbuf) ) }
| operator          { OP (lexeme lexbuf) }
| eof               { EOF }
| _                 { lexeme lexbuf |> sprintf "Parsing error: %s" |> failwith }